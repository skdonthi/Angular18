@import "./app/styles/fonts";
@import "./app/styles/variables";
@import "bootstrap/scss/functions";
@import "bootstrap/scss/variables";
@import "bootstrap/scss/mixins";
// merge with existing $theme-colors map
$theme-colors: map-merge(
  $theme-colors,
  (
    "primary": $primary,
  )
);
$font-family-base: $font-family;

html,
body {
  height: 100%;
  font-family: $font-family, sans-serif;
  background-color: #f5f5f7;
}

body {
  margin: 0;
  scrollbar-width: thin;
  scrollbar-color: $primary #f3f3f3;
  ::-webkit-scrollbar {
    width: 5px;
    height: 5px;
  }
  ::-webkit-scrollbar-track {
    background-color: #f3f3f3;
  }
  ::-webkit-scrollbar-thumb {
    background-color: $primary;
  }
  ::-webkit-scrollbar-thumb:hover {
    cursor: pointer;
    background-color: darken($primary, 10%);
  }
}
@import "bootstrap/scss/bootstrap";

.popover {
  --bs-popover-border-color: none !important;
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;
  border-radius: 0.375rem !important;
}
.modal-content {
  --bs-modal-border-color: none !important;
}

$directions: bottom top left right start end;

@each $side in $directions {
  $placement: if($side == "start", "left", if($side == "end", "right", $side));

  .bs-popover-#{$side} > .popover-arrow::before,
  .bs-popover-auto[data-popper-placement^="#{$placement}"]
    > .popover-arrow::before {
    border-#{$placement}-color: transparent !important;
  }
}

a {
  color: $primary;
  text-decoration: none;
}

.pointer {
  cursor: pointer;
}

.btn-link,
a {
  cursor: pointer;
  text-decoration: none;
  &:hover {
    color: #9bacc6;
  }

  &:active {
    color: $primary;
  }
}

hr {
  margin: 0;
}

.btn-primary:disabled {
  @extend .btn-outline-primary;
  cursor: not-allowed;
}

.btn-danger:disabled {
  @extend .btn-outline-danger;
  cursor: not-allowed;
}

.btn-primary {
  color: #f3f3f3;
}

.form-select {
  background-repeat: no-repeat;
  background-position: right 10px center;
  background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 8 8"><path d="M0 0l4 5 4-5H0z"/></svg>');
  content: "";
  background-size: 8px;
}

.x-filter-icon::before {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='10' height='10' fill='currentColor' class='bi bi-funnel' viewBox='0 0 16 16'%3E%3Cpath d='M1.5 1.5A.5.5 0 0 1 2 1h12a.5.5 0 0 1 .5.5v2a.5.5 0 0 1-.128.334L10 8.692V13.5a.5.5 0 0 1-.342.474l-3 1A.5.5 0 0 1 6 14.5V8.692L1.628 3.834A.5.5 0 0 1 1.5 3.5zm1 .5v1.308l4.372 4.858A.5.5 0 0 1 7 8.5v5.306l2-.666V8.5a.5.5 0 0 1 .128-.334L13.5 3.308V2z'/%3E%3C/svg%3E");
  width: 10px;
  height: 10px;
  margin-left: -8px;
  margin-top: -8px;
  display: inline-block;
}

.mandatory-field::before {
  content: "*";
  color: $danger;
  margin-left: 2px;
}

.form-control[type="text"]:read-only,
.form-control[type="number"]:read-only,
.form-control[type="checkbox"]:read-only {
  background: #f3f3f3;
  outline: none;
}

.form-check-input {
  width: 1.25rem;
  height: 1.25rem;
}

.form-check-input:checked {
  background-color: $primary;
  border-color: $primary;
}

.card-header,
.modal-title,
.col-form-label {
  text-transform: uppercase;
}

.mat-grid-tile .mat-grid-tile-content {
  display: inline-block;
  font-size: small;
}

.x-custom-scroll {
  max-height: 550px;
  overflow-y: auto;
  text-wrap: nowrap;
  overflow-x: auto;
}

.x-overflow {
  overflow-x: auto;
}

.table-container {
  height: calc(100vh - 205px);
  overflow-y: auto;
  overflow-x: auto;
}

input.ng-invalid.ng-touched {
  border: $danger 1px solid !important;
}
/* Hide arrows in Chrome, Safari, and Edge */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
  display: none;
}
